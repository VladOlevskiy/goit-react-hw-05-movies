{"version":3,"file":"static/js/936.996cef82.chunk.js","mappings":"6TAGaA,GAAqBC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,mRAiBlBE,GAAaF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,mRAiBVI,EAAiBJ,EAAAA,GAAAA,GAAH,gDAIdK,EAAqBL,EAAAA,GAAAA,GAAH,qEAKlBM,EAAgBN,EAAAA,GAAAA,EAAH,gDAIbO,EAAYP,EAAAA,GAAAA,IAAH,kEAKTQ,EAAMR,EAAAA,GAAAA,IAAH,+CAIHS,EAAaT,EAAAA,GAAAA,GAAH,gDAIVU,EAAQV,EAAAA,GAAAA,GAAH,gDAILW,EAAOX,EAAAA,GAAAA,EAAH,gDAIJY,EAAaZ,EAAAA,GAAAA,GAAH,+DAKVa,EAAiBb,EAAAA,GAAAA,GAAH,+EAMdc,EAAUd,EAAAA,GAAAA,QAAH,6F,SCmCpB,EA5FqB,WAAO,IAAD,QACzB,GAAwCe,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4BF,EAAAA,EAAAA,WAAS,GAArC,eAAOG,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MACXC,EAAY,oBAAGF,EAASG,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IACrCC,GAAOC,EAAAA,EAAAA,MAAPD,IAERE,EAAAA,EAAAA,YAAU,WAAM,wCACd,2FACER,GAAU,GADZ,kBAGmCS,EAAAA,EAAAA,eAAmBH,GAHtD,OAGUI,EAHV,OAIIZ,EAAgBY,GAChBV,GAAU,GALd,sDAOU,IAAIW,MAAJ,MAPV,sGADc,uBAAC,WAAD,wBAYdC,EACD,GAAE,CAACN,IAEJ,IAAMO,EACJ,mCAAqChB,EAAaiB,YAEpD,OACE,UAACnB,EAAD,YACc,IAAXI,GACC,UAACX,EAAD,YACE,SAACL,EAAD,CAAYgC,GAAIZ,EAAhB,kBACCN,EAAaiB,aACZ,SAACzB,EAAD,CAAK2B,IAAKH,EAAaI,IAAI,KAAKC,MAAM,WAEtC,gBACEF,IAAKG,EACLF,IAAI,iBACJC,MAAM,QACNE,OAAO,WAIX,4BACE,SAAC9B,EAAD,UAAaO,EAAawB,SAC1B,UAAC7B,EAAD,0BACe8B,KAAKC,MAAkC,GAA5B1B,EAAa2B,cADvC,QAGA,SAACjC,EAAD,wBACA,SAACC,EAAD,UAAOK,EAAa4B,YACpB,SAAClC,EAAD,sBACA,SAACE,EAAD,UACGI,EAAa6B,OAAOC,KAAI,SAAAC,GACvB,OACE,SAAClC,EAAD,UAAkCkC,EAAMC,MAAnBD,EAAMC,KAE9B,aAKP,SAAC,KAAD,CACET,OAAO,KACPF,MAAM,KACNY,MAAM,YACNC,UAAU,kBACVC,aAAc,CACZC,eAAgB,UAElBC,aAAa,GACbC,SAAS,KAGb,SAAChD,EAAD,uCACA,UAACF,EAAD,YACE,SAACC,EAAD,WACE,SAACN,EAAD,CAAoBmC,GAAG,OAAOX,MAAO,CAAEC,KAAI,UAAEJ,EAASG,aAAX,aAAE,EAAgBC,MAA7D,qBAIF,SAACnB,EAAD,WACE,SAACN,EAAD,CACEmC,GAAG,UACHX,MAAO,CAAEC,KAAI,UAAEJ,EAASG,aAAX,aAAE,EAAgBC,MAFjC,2BAQJ,SAAC,KAAD,MAGL,C","sources":["pages/MovieDetails/MovieDetails-styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink, Link } from 'react-router-dom';\n\nexport const AdditionalLinkItem = styled(NavLink)`\n  color: black;\n  padding: 8px 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: black;\n  font-weight: 500;\n  &:hover,\n  &:focus {\n    color: orangered;\n  }\n  &.active {\n    color: white;\n    background-color: orangered;\n  }\n`;\n\nexport const LinkToBack = styled(Link)`\n  color: black;\n  padding: 8px 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: black;\n  font-weight: 500;\n  &:hover,\n  &:focus {\n    color: orangered;\n  }\n  &.active {\n    color: white;\n    background-color: orangered;\n  }\n`;\n\nexport const AdditionalList = styled.ul`\n  margin-bottom: 20px;\n`;\n\nexport const AdditionalListItem = styled.li`\n  margin-bottom: 15px;\n  list-style: none;\n`;\n\nexport const AdditionaText = styled.p`\n  margin-bottom: 20px;\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  margin-bottom: 30px;\n`;\n\nexport const Img = styled.img`\n  margin-right: 30px;\n`;\n\nexport const MaineTitle = styled.h2`\n  margin-bottom: 10px;\n`;\n\nexport const Title = styled.h3`\n  margin-bottom: 10px;\n`;\n\nexport const Text = styled.p`\n  margin-bottom: 10px;\n`;\n\nexport const GenresList = styled.ul`\n  display: flex;\n  list-style: none;\n`;\n\nexport const GenresListItem = styled.li`\n  &: not(: last-child) {\n    margin-right: 7px;\n  }\n`;\n\nexport const Section = styled.section`\n  padding-top: 20px;\n  padding-right: 16px;\n  padding-left: 16px;\n`;\n","import { useParams } from 'react-router-dom';\nimport Api from '../../services/API';\nimport React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport { Circles } from 'react-loader-spinner';\nimport { Outlet } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport defaultImg from '../../image/no-image.jpg';\n\nimport {\n  Container,\n  Img,\n  MaineTitle,\n  Title,\n  Text,\n  GenresList,\n  GenresListItem,\n  Section,\n  AdditionalLinkItem,\n  AdditionalListItem,\n  AdditionaText,\n  AdditionalList,\n  LinkToBack,\n} from './MovieDetails-styled';\n\nconst MovieDetails = () => {\n  const [movieDetails, setMovieDetails] = useState([]);\n  const [loader, setLoader] = useState(false);\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n  const { id } = useParams();\n\n  useEffect(() => {\n    async function getFilmById() {\n      setLoader(false);\n      try {\n        const movieDetailsById = await Api.getDetailsById(id);\n        setMovieDetails(movieDetailsById);\n        setLoader(true);\n      } catch (error) {\n        throw new Error(error);\n      } finally {\n      }\n    }\n    getFilmById();\n  }, [id]);\n\n  const mainImglink =\n    'https://image.tmdb.org/t/p/w500/' + movieDetails.poster_path;\n\n  return (\n    <Section>\n      {loader === true ? (\n        <Container>\n          <LinkToBack to={backLinkHref}>BACK</LinkToBack>\n          {movieDetails.poster_path ? (\n            <Img src={mainImglink} alt=\"id\" width=\"300px\"></Img>\n          ) : (\n            <img\n              src={defaultImg}\n              alt=\"no-images here\"\n              width=\"150px\"\n              height=\"225px\"\n            />\n          )}\n\n          <div>\n            <MaineTitle>{movieDetails.title}</MaineTitle>\n            <Text>\n              User Score: {Math.round(movieDetails.vote_average * 10)}%\n            </Text>\n            <Title>Overview</Title>\n            <Text>{movieDetails.overview}</Text>\n            <Title>Genres</Title>\n            <GenresList>\n              {movieDetails.genres.map(genre => {\n                return (\n                  <GenresListItem key={genre.name}>{genre.name}</GenresListItem>\n                );\n              })}\n            </GenresList>\n          </div>\n        </Container>\n      ) : (\n        <Circles\n          height=\"80\"\n          width=\"80\"\n          color=\"orangered\"\n          ariaLabel=\"circles-loading\"\n          wrapperStyle={{\n            justifyContent: 'center',\n          }}\n          wrapperClass=\"\"\n          visible={true}\n        />\n      )}\n      <AdditionaText>Additional infornation </AdditionaText>\n      <AdditionalList>\n        <AdditionalListItem>\n          <AdditionalLinkItem to=\"cast\" state={{ from: location.state?.from }}>\n            Cast\n          </AdditionalLinkItem>\n        </AdditionalListItem>\n        <AdditionalListItem>\n          <AdditionalLinkItem\n            to=\"reviews\"\n            state={{ from: location.state?.from }}\n          >\n            Reviews\n          </AdditionalLinkItem>\n        </AdditionalListItem>\n      </AdditionalList>\n      <Outlet />\n    </Section>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["AdditionalLinkItem","styled","NavLink","LinkToBack","Link","AdditionalList","AdditionalListItem","AdditionaText","Container","Img","MaineTitle","Title","Text","GenresList","GenresListItem","Section","useState","movieDetails","setMovieDetails","loader","setLoader","location","useLocation","backLinkHref","state","from","id","useParams","useEffect","Api","movieDetailsById","Error","getFilmById","mainImglink","poster_path","to","src","alt","width","defaultImg","height","title","Math","round","vote_average","overview","genres","map","genre","name","color","ariaLabel","wrapperStyle","justifyContent","wrapperClass","visible"],"sourceRoot":""}