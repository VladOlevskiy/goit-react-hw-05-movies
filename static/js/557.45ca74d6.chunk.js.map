{"version":3,"file":"static/js/557.45ca74d6.chunk.js","mappings":"4QAEaA,EAAkBC,EAAAA,GAAAA,GAAH,oGAOfC,EAAeD,EAAAA,GAAAA,GAAH,gD,SCuCzB,EA3CgB,WACd,OAAwCE,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAqBR,OAnBAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,+GAEoCC,EAAAA,EAAAA,eAAmBH,GAFvD,OAEUI,EAFV,OAE4DC,QAClDC,EAAsBF,EAAiBG,KAAI,SAAAC,GAC/C,MAAO,CACLC,OAAQD,EAAKC,OACbC,QAASF,EAAKE,QACdV,GAAIQ,EAAKR,GAEZ,IACDD,EAAgBO,GAVpB,sDAYU,IAAIK,MAAJ,MAZV,sGADc,uBAAC,WAAD,wBAiBdC,EACD,GAAE,CAACZ,KAEF,+BACE,wBACGF,EAAae,OAAS,EACrBf,EAAaS,KAAI,SAAAO,GACf,OACE,UAACpB,EAAD,YACE,UAACE,EAAD,sBAAuBkB,EAAOL,WAC9B,uBAAIK,EAAOJ,YAFSI,EAAOd,GAKhC,KAED,mDAKT,C,6DC5CKe,EAAU,gCACVC,EAAU,mCAEVC,EAAgB,mCAAG,6GAEEC,EAAAA,GAAAA,IAAA,YACzBH,EADyB,sCACYC,IAHd,cAEfG,EAFe,yBAIdA,EAASC,MAJK,sCAMf,IAAIT,MAAJ,MANe,yDAAH,qDAUhBU,EAAc,mCAAG,WAAMrB,GAAN,gGAEIkB,EAAAA,GAAAA,IAAA,YACzBH,EADyB,iBACTf,EADS,oBACKgB,IAHT,cAEbG,EAFa,yBAIZA,EAASC,MAJG,sCAMb,IAAIT,MAAJ,MANa,yDAAH,sDAUdW,EAAW,mCAAG,WAAMtB,GAAN,gGAEOkB,EAAAA,GAAAA,IAAA,YACzBH,EADyB,iBACTf,EADS,4BACagB,IAHpB,cAEVG,EAFU,yBAITA,EAASC,MAJA,sCAMV,IAAIT,MAAJ,MANU,yDAAH,sDAUXY,EAAc,mCAAG,WAAMvB,GAAN,gGAEIkB,EAAAA,GAAAA,IAAA,YACzBH,EADyB,iBACTf,EADS,4BACagB,IAHjB,cAEbG,EAFa,yBAIZA,EAASC,MAJG,sCAMb,IAAIT,MAAJ,MANa,yDAAH,sDAUda,EAAqB,mCAAG,WAAMC,GAAN,gGAEHP,EAAAA,GAAAA,IAAA,YACzBH,EADyB,gCACMC,EADN,kBACuBS,EADvB,YAFG,cAEpBN,EAFoB,yBAInBA,EAASC,MAJU,sCAMpB,IAAIT,MAAJ,MANoB,yDAAH,sDAUrBR,EAAM,CACVc,iBAAAA,EACAI,eAAAA,EACAC,YAAAA,EACAC,eAAAA,EACAC,sBAAAA,GAEF,K","sources":["components/Reviews/Reviews-styled.jsx","components/Reviews/Reviews.jsx","services/API.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewsListItem = styled.li`\n  list-style: none;\n  &:not(:last-child) {\n    margin-bottom: 20px;\n  }\n`;\n\nexport const ReviewsTitle = styled.h3`\n  margin-bottom: 10px;\n`;\n","import Api from 'services/API';\nimport { useParams } from 'react-router-dom';\nimport React, { useState, useEffect } from 'react';\nimport { ReviewsListItem, ReviewsTitle } from './Reviews-styled';\n\nconst Reviews = () => {\n  const [movieReviews, setMovieReviews] = useState([]);\n  const { id } = useParams();\n\n  useEffect(() => {\n    async function getByReviewsId() {\n      try {\n        const movieReviewsById = (await Api.getReviewsById(id)).results;\n        const filteredReviewsById = movieReviewsById.map(film => {\n          return {\n            author: film.author,\n            content: film.content,\n            id: film.id,\n          };\n        });\n        setMovieReviews(filteredReviewsById);\n      } catch (error) {\n        throw new Error(error);\n      } finally {\n      }\n    }\n    getByReviewsId();\n  }, [id]);\n  return (\n    <>\n      <ul>\n        {movieReviews.length > 0 ? (\n          movieReviews.map(review => {\n            return (\n              <ReviewsListItem key={review.id}>\n                <ReviewsTitle>Author: {review.author}</ReviewsTitle>\n                <p>{review.content}</p>\n              </ReviewsListItem>\n            );\n          })\n        ) : (\n          <p>There is no reviews </p>\n        )}\n      </ul>\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '7a266da64b855f631bb43154d09644d1';\n\nconst getTrendingFilms = async () => {\n  try {\n    const response = await axios.get(`\n${API_URL}trending/movie/day?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\nconst getDetailsById = async id => {\n  try {\n    const response = await axios.get(`\n${API_URL}movie/${id}?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\nconst getCastById = async id => {\n  try {\n    const response = await axios.get(`\n${API_URL}movie/${id}/credits?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\nconst getReviewsById = async id => {\n  try {\n    const response = await axios.get(`\n${API_URL}movie/${id}/reviews?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\nconst getFilmsBySearchQuery = async searchQuery => {\n  try {\n    const response = await axios.get(`\n${API_URL}search/movie?api_key=${API_KEY}&query=${searchQuery}&page=1`);\n    return response.data;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\nconst Api = {\n  getTrendingFilms,\n  getDetailsById,\n  getCastById,\n  getReviewsById,\n  getFilmsBySearchQuery,\n};\nexport default Api;\n"],"names":["ReviewsListItem","styled","ReviewsTitle","useState","movieReviews","setMovieReviews","id","useParams","useEffect","Api","movieReviewsById","results","filteredReviewsById","map","film","author","content","Error","getByReviewsId","length","review","API_URL","API_KEY","getTrendingFilms","axios","response","data","getDetailsById","getCastById","getReviewsById","getFilmsBySearchQuery","searchQuery"],"sourceRoot":""}