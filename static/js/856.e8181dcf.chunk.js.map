{"version":3,"file":"static/js/856.e8181dcf.chunk.js","mappings":"0QAEaA,E,OAAeC,GAAAA,GAAH,oG,SC4DzB,EAvDa,WACX,OAAkCC,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAsBR,OApBAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,+GAEiCC,EAAAA,EAAAA,YAAgBH,GAFjD,OAEUI,EAFV,OAEsDC,KAC5CC,EAAmBF,EAAcG,KAAI,SAAAC,GACzC,MAAO,CACLC,KAAMD,EAAKC,KACXC,UAAWF,EAAKE,UAChBV,GAAIQ,EAAKR,GACTW,MAAOH,EAAKI,aAEf,IACDb,EAAaO,GAXjB,sDAaU,IAAIO,MAAJ,MAbV,sGADc,uBAAC,WAAD,wBAkBdC,EACD,GAAE,CAACd,KAEF,+BACE,wBACGF,EAAUiB,OAAS,EAClBjB,EAAUS,KAAI,SAAAC,GACZ,IAAIQ,EAAM,mCAAqCR,EAAKG,MACpD,OACE,UAAChB,EAAD,WACGa,EAAKG,OACJ,gBAAKK,IAAKA,EAAKC,IAAI,GAAGC,MAAM,QAAQC,OAAO,WAE3C,gBACEH,IAAKI,EACLH,IAAI,iBACJC,MAAM,QACNC,OAAO,WAGX,uBAAIX,EAAKC,QACT,uCAAeD,EAAKE,eAZHF,EAAKR,GAe3B,KAED,2DAKT,C","sources":["components/Cast/Cast-styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastListItem = styled.li`\n  list-style: none;\n  &:not(:last-child) {\n    margin-bottom: 20px;\n  }\n`;\n","import { useParams } from 'react-router-dom';\n\nimport Api from 'services/API';\nimport React, { useState, useEffect } from 'react';\nimport defaultImg from '../../image/no-image.jpg';\nimport { CastListItem } from './Cast-styled';\n\nconst Cast = () => {\n  const [movieCast, setMovieCast] = useState([]);\n  const { id } = useParams();\n\n  useEffect(() => {\n    async function getCastById() {\n      try {\n        const movieCastById = (await Api.getCastById(id)).cast;\n        const filteredCastById = movieCastById.map(film => {\n          return {\n            name: film.name,\n            character: film.character,\n            id: film.id,\n            image: film.profile_path,\n          };\n        });\n        setMovieCast(filteredCastById);\n      } catch (error) {\n        throw new Error(error);\n      } finally {\n      }\n    }\n    getCastById();\n  }, [id]);\n  return (\n    <>\n      <ul>\n        {movieCast.length > 0 ? (\n          movieCast.map(film => {\n            let src = 'https://image.tmdb.org/t/p/w500/' + film.image;\n            return (\n              <CastListItem key={film.id}>\n                {film.image ? (\n                  <img src={src} alt=\"\" width=\"150px\" height=\"225px\" />\n                ) : (\n                  <img\n                    src={defaultImg}\n                    alt=\"no-images here\"\n                    width=\"150px\"\n                    height=\"225px\"\n                  />\n                )}\n                <p>{film.name}</p>\n                <p>Character: {film.character}</p>\n              </CastListItem>\n            );\n          })\n        ) : (\n          <p>There is no info about cast </p>\n        )}\n      </ul>\n    </>\n  );\n};\n\nexport default Cast;\n"],"names":["CastListItem","styled","useState","movieCast","setMovieCast","id","useParams","useEffect","Api","movieCastById","cast","filteredCastById","map","film","name","character","image","profile_path","Error","getCastById","length","src","alt","width","height","defaultImg"],"sourceRoot":""}